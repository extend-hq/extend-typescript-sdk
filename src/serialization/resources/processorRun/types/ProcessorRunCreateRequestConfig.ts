/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Extend from "../../../../api/index";
import * as core from "../../../../core";
import { ClassificationConfig } from "../../../types/ClassificationConfig";
import { ExtractionConfig } from "../../../types/ExtractionConfig";
import { SplitterConfig } from "../../../types/SplitterConfig";

export const ProcessorRunCreateRequestConfig: core.serialization.Schema<
    serializers.ProcessorRunCreateRequestConfig.Raw,
    Extend.ProcessorRunCreateRequestConfig
> = core.serialization
    .union("type", {
        CLASSIFY: ClassificationConfig,
        EXTRACT: ExtractionConfig,
        SPLITTER: SplitterConfig,
    })
    .transform<Extend.ProcessorRunCreateRequestConfig>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace ProcessorRunCreateRequestConfig {
    export type Raw =
        | ProcessorRunCreateRequestConfig.Classify
        | ProcessorRunCreateRequestConfig.Extract
        | ProcessorRunCreateRequestConfig.Splitter;

    export interface Classify extends ClassificationConfig.Raw {
        type: "CLASSIFY";
    }

    export interface Extract extends ExtractionConfig.Raw {
        type: "EXTRACT";
    }

    export interface Splitter extends SplitterConfig.Raw {
        type: "SPLITTER";
    }
}
