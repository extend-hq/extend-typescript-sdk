/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Extend from "../../../../api/index";
import * as core from "../../../../core";
import { Chunk } from "../../../types/Chunk";
import { PostParseResponseStatus } from "./PostParseResponseStatus";
import { PostParseResponseMetrics } from "./PostParseResponseMetrics";
import { ParseConfig } from "../../../types/ParseConfig";

export const PostParseResponse: core.serialization.ObjectSchema<
    serializers.PostParseResponse.Raw,
    Extend.PostParseResponse
> = core.serialization.object({
    object: core.serialization.stringLiteral("parser_run"),
    id: core.serialization.string(),
    fileId: core.serialization.string(),
    chunks: core.serialization.list(Chunk),
    status: PostParseResponseStatus,
    failureReason: core.serialization.string().optional(),
    metrics: PostParseResponseMetrics,
    config: ParseConfig,
});

export declare namespace PostParseResponse {
    export interface Raw {
        object: "parser_run";
        id: string;
        fileId: string;
        chunks: Chunk.Raw[];
        status: PostParseResponseStatus.Raw;
        failureReason?: string | null;
        metrics: PostParseResponseMetrics.Raw;
        config: ParseConfig.Raw;
    }
}
