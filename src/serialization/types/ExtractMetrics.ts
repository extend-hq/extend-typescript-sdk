/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Extend from "../../api/index";
import * as core from "../../core";
import { ExtractMetricsFieldMetrics } from "./ExtractMetricsFieldMetrics";
import { BaseMetrics } from "./BaseMetrics";

export const ExtractMetrics: core.serialization.ObjectSchema<serializers.ExtractMetrics.Raw, Extend.ExtractMetrics> =
    core.serialization
        .object({
            type: core.serialization.stringLiteral("EXTRACT").optional(),
            fieldMetrics: ExtractMetricsFieldMetrics.optional(),
            arrayCardinalityMetrics: core.serialization
                .record(core.serialization.string(), core.serialization.unknown())
                .optional(),
        })
        .extend(BaseMetrics);

export declare namespace ExtractMetrics {
    export interface Raw extends BaseMetrics.Raw {
        type?: "EXTRACT" | null;
        fieldMetrics?: ExtractMetricsFieldMetrics.Raw | null;
        arrayCardinalityMetrics?: Record<string, unknown> | null;
    }
}
