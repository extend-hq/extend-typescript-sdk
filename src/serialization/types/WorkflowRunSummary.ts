/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Extend from "../../api/index";
import * as core from "../../core";
import { WorkflowStatus } from "./WorkflowStatus";

export const WorkflowRunSummary: core.serialization.ObjectSchema<
    serializers.WorkflowRunSummary.Raw,
    Extend.WorkflowRunSummary
> = core.serialization.object({
    id: core.serialization.string(),
    status: WorkflowStatus,
    initialRunAt: core.serialization.date().optional(),
    reviewedByUser: core.serialization.string().optional(),
    reviewedAt: core.serialization.date().optional(),
    startTime: core.serialization.date().optional(),
    endTime: core.serialization.date().optional(),
    workflowId: core.serialization.string(),
    workflowName: core.serialization.string(),
    workflowVersionId: core.serialization.string(),
    batchId: core.serialization.string().optional(),
    rejectionNote: core.serialization.string().optional(),
    createdAt: core.serialization.date(),
    updatedAt: core.serialization.date(),
});

export declare namespace WorkflowRunSummary {
    export interface Raw {
        id: string;
        status: WorkflowStatus.Raw;
        initialRunAt?: string | null;
        reviewedByUser?: string | null;
        reviewedAt?: string | null;
        startTime?: string | null;
        endTime?: string | null;
        workflowId: string;
        workflowName: string;
        workflowVersionId: string;
        batchId?: string | null;
        rejectionNote?: string | null;
        createdAt: string;
        updatedAt: string;
    }
}
