/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Extend from "../../api/index";
import * as core from "../../core";
import { BatchProcessorRunMetrics } from "./BatchProcessorRunMetrics";
import { BatchProcessorRunStatus } from "./BatchProcessorRunStatus";
import { BatchProcessorRunSource } from "./BatchProcessorRunSource";
import { BatchProcessorRunOptions } from "./BatchProcessorRunOptions";

export const BatchProcessorRun: core.serialization.ObjectSchema<
    serializers.BatchProcessorRun.Raw,
    Extend.BatchProcessorRun
> = core.serialization.object({
    object: core.serialization.string(),
    id: core.serialization.string(),
    processorId: core.serialization.string(),
    processorVersionId: core.serialization.string(),
    processorName: core.serialization.string(),
    metrics: BatchProcessorRunMetrics,
    status: BatchProcessorRunStatus,
    source: BatchProcessorRunSource,
    sourceId: core.serialization.string().optional(),
    runCount: core.serialization.number(),
    options: BatchProcessorRunOptions,
    createdAt: core.serialization.date(),
    updatedAt: core.serialization.date(),
});

export declare namespace BatchProcessorRun {
    export interface Raw {
        object: string;
        id: string;
        processorId: string;
        processorVersionId: string;
        processorName: string;
        metrics: BatchProcessorRunMetrics.Raw;
        status: BatchProcessorRunStatus.Raw;
        source: BatchProcessorRunSource.Raw;
        sourceId?: string | null;
        runCount: number;
        options: BatchProcessorRunOptions.Raw;
        createdAt: string;
        updatedAt: string;
    }
}
