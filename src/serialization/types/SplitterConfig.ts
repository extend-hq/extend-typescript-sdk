/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Extend from "../../api/index";
import * as core from "../../core";
import { Classification } from "./Classification";
import { SplitterAdvancedOptions } from "./SplitterAdvancedOptions";

export const SplitterConfig: core.serialization.ObjectSchema<serializers.SplitterConfig.Raw, Extend.SplitterConfig> =
    core.serialization.object({
        baseProcessor: core.serialization.stringLiteral("splitter_performance").optional(),
        baseVersion: core.serialization.string().optional(),
        splitClassifications: core.serialization.list(Classification),
        splitRules: core.serialization.string().optional(),
        advancedOptions: SplitterAdvancedOptions.optional(),
    });

export declare namespace SplitterConfig {
    export interface Raw {
        baseProcessor?: "splitter_performance" | null;
        baseVersion?: string | null;
        splitClassifications: Classification.Raw[];
        splitRules?: string | null;
        advancedOptions?: SplitterAdvancedOptions.Raw | null;
    }
}
