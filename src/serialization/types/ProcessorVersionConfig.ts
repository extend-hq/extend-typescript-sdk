/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Extend from "../../api/index";
import * as core from "../../core";
import { ClassificationConfig } from "./ClassificationConfig";
import { ExtractionConfig } from "./ExtractionConfig";
import { SplitterConfig } from "./SplitterConfig";

export const ProcessorVersionConfig: core.serialization.Schema<
    serializers.ProcessorVersionConfig.Raw,
    Extend.ProcessorVersionConfig
> = core.serialization
    .union("type", {
        CLASSIFY: ClassificationConfig,
        EXTRACT: ExtractionConfig,
        SPLITTER: SplitterConfig,
    })
    .transform<Extend.ProcessorVersionConfig>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace ProcessorVersionConfig {
    export type Raw =
        | ProcessorVersionConfig.Classify
        | ProcessorVersionConfig.Extract
        | ProcessorVersionConfig.Splitter;

    export interface Classify extends ClassificationConfig.Raw {
        type: "CLASSIFY";
    }

    export interface Extract extends ExtractionConfig.Raw {
        type: "EXTRACT";
    }

    export interface Splitter extends SplitterConfig.Raw {
        type: "SPLITTER";
    }
}
