/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Extend from "../../api/index";
import * as core from "../../core";
import { Chunk } from "./Chunk";
import { ParseResponseStatus } from "./ParseResponseStatus";
import { ParseResponseMetrics } from "./ParseResponseMetrics";
import { ParseConfig } from "./ParseConfig";

export const ParseResponse: core.serialization.ObjectSchema<serializers.ParseResponse.Raw, Extend.ParseResponse> =
    core.serialization.object({
        object: core.serialization.stringLiteral("parser_run"),
        id: core.serialization.string(),
        fileId: core.serialization.string(),
        chunks: core.serialization.list(Chunk),
        status: ParseResponseStatus,
        failureReason: core.serialization.string().optional(),
        metrics: ParseResponseMetrics,
        config: ParseConfig,
    });

export declare namespace ParseResponse {
    export interface Raw {
        object: "parser_run";
        id: string;
        fileId: string;
        chunks: Chunk.Raw[];
        status: ParseResponseStatus.Raw;
        failureReason?: string | null;
        metrics: ParseResponseMetrics.Raw;
        config: ParseConfig.Raw;
    }
}
