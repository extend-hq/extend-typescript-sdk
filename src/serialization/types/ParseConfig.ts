/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Extend from "../../api/index";
import * as core from "../../core";
import { ParseConfigTarget } from "./ParseConfigTarget";
import { ParseConfigChunkingStrategy } from "./ParseConfigChunkingStrategy";
import { ParseConfigBlockOptions } from "./ParseConfigBlockOptions";
import { ParseConfigAdvancedOptions } from "./ParseConfigAdvancedOptions";

export const ParseConfig: core.serialization.ObjectSchema<serializers.ParseConfig.Raw, Extend.ParseConfig> =
    core.serialization.object({
        target: ParseConfigTarget.optional(),
        chunkingStrategy: ParseConfigChunkingStrategy.optional(),
        blockOptions: ParseConfigBlockOptions.optional(),
        advancedOptions: ParseConfigAdvancedOptions.optional(),
    });

export declare namespace ParseConfig {
    export interface Raw {
        target?: ParseConfigTarget.Raw | null;
        chunkingStrategy?: ParseConfigChunkingStrategy.Raw | null;
        blockOptions?: ParseConfigBlockOptions.Raw | null;
        advancedOptions?: ParseConfigAdvancedOptions.Raw | null;
    }
}
