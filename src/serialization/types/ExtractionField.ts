/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Extend from "../../api/index";
import * as core from "../../core";
import { ExtractionFieldType } from "./ExtractionFieldType";
import { Enum } from "./Enum";

export const ExtractionField: core.serialization.ObjectSchema<serializers.ExtractionField.Raw, Extend.ExtractionField> =
    core.serialization.object({
        id: core.serialization.string(),
        name: core.serialization.string(),
        type: ExtractionFieldType,
        description: core.serialization.string(),
        schema: core.serialization.list(core.serialization.lazyObject(() => serializers.ExtractionField)).optional(),
        enum: core.serialization.list(Enum).optional(),
    });

export declare namespace ExtractionField {
    export interface Raw {
        id: string;
        name: string;
        type: ExtractionFieldType.Raw;
        description: string;
        schema?: serializers.ExtractionField.Raw[] | null;
        enum?: Enum.Raw[] | null;
    }
}
