/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Extend from "../../api/index";
import * as core from "../../core";
import { ExtractionConfigBaseProcessor } from "./ExtractionConfigBaseProcessor";
import { JsonObject } from "./JsonObject";
import { ExtractionAdvancedOptions } from "./ExtractionAdvancedOptions";

export const ExtractionConfig: core.serialization.ObjectSchema<
    serializers.ExtractionConfig.Raw,
    Extend.ExtractionConfig
> = core.serialization.object({
    baseProcessor: ExtractionConfigBaseProcessor.optional(),
    baseVersion: core.serialization.string().optional(),
    extractionRules: core.serialization.string().optional(),
    schema: JsonObject.optional(),
    fields: core.serialization.list(core.serialization.lazyObject(() => serializers.ExtractionField)).optional(),
    advancedOptions: ExtractionAdvancedOptions.optional(),
});

export declare namespace ExtractionConfig {
    export interface Raw {
        baseProcessor?: ExtractionConfigBaseProcessor.Raw | null;
        baseVersion?: string | null;
        extractionRules?: string | null;
        schema?: JsonObject.Raw | null;
        fields?: serializers.ExtractionField.Raw[] | null;
        advancedOptions?: ExtractionAdvancedOptions.Raw | null;
    }
}
