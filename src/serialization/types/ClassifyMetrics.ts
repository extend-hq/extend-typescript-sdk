/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Extend from "../../api/index";
import * as core from "../../core";
import { BaseMetrics } from "./BaseMetrics";

export const ClassifyMetrics: core.serialization.ObjectSchema<serializers.ClassifyMetrics.Raw, Extend.ClassifyMetrics> =
    core.serialization
        .object({
            type: core.serialization.stringLiteral("CLASSIFY").optional(),
            accuracyPerc: core.serialization.number().optional(),
            meanConfidence: core.serialization.number().optional(),
            distribution: core.serialization
                .record(core.serialization.string(), core.serialization.unknown())
                .optional(),
            accuracyPercByClassification: core.serialization
                .record(core.serialization.string(), core.serialization.unknown())
                .optional(),
            confusionMatrix: core.serialization
                .record(core.serialization.string(), core.serialization.unknown())
                .optional(),
        })
        .extend(BaseMetrics);

export declare namespace ClassifyMetrics {
    export interface Raw extends BaseMetrics.Raw {
        type?: "CLASSIFY" | null;
        accuracyPerc?: number | null;
        meanConfidence?: number | null;
        distribution?: Record<string, unknown> | null;
        accuracyPercByClassification?: Record<string, unknown> | null;
        confusionMatrix?: Record<string, unknown> | null;
    }
}
