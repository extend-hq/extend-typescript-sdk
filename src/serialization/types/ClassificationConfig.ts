/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Extend from "../../api/index";
import * as core from "../../core";
import { ClassificationConfigBaseProcessor } from "./ClassificationConfigBaseProcessor";
import { Classification } from "./Classification";
import { ClassificationAdvancedOptions } from "./ClassificationAdvancedOptions";

export const ClassificationConfig: core.serialization.ObjectSchema<
    serializers.ClassificationConfig.Raw,
    Extend.ClassificationConfig
> = core.serialization.object({
    baseProcessor: ClassificationConfigBaseProcessor.optional(),
    baseVersion: core.serialization.string().optional(),
    classifications: core.serialization.list(Classification),
    classificationRules: core.serialization.string().optional(),
    advancedOptions: ClassificationAdvancedOptions.optional(),
});

export declare namespace ClassificationConfig {
    export interface Raw {
        baseProcessor?: ClassificationConfigBaseProcessor.Raw | null;
        baseVersion?: string | null;
        classifications: Classification.Raw[];
        classificationRules?: string | null;
        advancedOptions?: ClassificationAdvancedOptions.Raw | null;
    }
}
