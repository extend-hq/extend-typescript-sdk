/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Extend from "../../api/index";
import * as core from "../../core";
import { WorkflowStatus } from "./WorkflowStatus";
import { JsonObject } from "./JsonObject";
import { File_ } from "./File_";
import { ProcessorRun } from "./ProcessorRun";
import { StepRun } from "./StepRun";
import { Workflow } from "./Workflow";

export const WorkflowRun: core.serialization.ObjectSchema<serializers.WorkflowRun.Raw, Extend.WorkflowRun> =
    core.serialization.object({
        object: core.serialization.string(),
        id: core.serialization.string(),
        name: core.serialization.string(),
        url: core.serialization.string(),
        status: WorkflowStatus,
        metadata: JsonObject,
        batchId: core.serialization.string().optional(),
        files: core.serialization.list(File_),
        failureReason: core.serialization.string().optional(),
        failureMessage: core.serialization.string().optional(),
        initialRunAt: core.serialization.date(),
        reviewedBy: core.serialization.string().optional(),
        reviewed: core.serialization.boolean(),
        rejectionNote: core.serialization.string().optional(),
        reviewedAt: core.serialization.date().optional(),
        startTime: core.serialization.date().optional(),
        endTime: core.serialization.date().optional(),
        outputs: core.serialization.list(ProcessorRun),
        stepRuns: core.serialization.list(StepRun),
        workflow: Workflow,
    });

export declare namespace WorkflowRun {
    export interface Raw {
        object: string;
        id: string;
        name: string;
        url: string;
        status: WorkflowStatus.Raw;
        metadata: JsonObject.Raw;
        batchId?: string | null;
        files: File_.Raw[];
        failureReason?: string | null;
        failureMessage?: string | null;
        initialRunAt: string;
        reviewedBy?: string | null;
        reviewed: boolean;
        rejectionNote?: string | null;
        reviewedAt?: string | null;
        startTime?: string | null;
        endTime?: string | null;
        outputs: ProcessorRun.Raw[];
        stepRuns: StepRun.Raw[];
        workflow: Workflow.Raw;
    }
}
