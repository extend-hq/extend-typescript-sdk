/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Extend from "../../api/index";
import * as core from "../../core";
import { BaseMetrics } from "./BaseMetrics";

export const SplitterMetrics: core.serialization.ObjectSchema<serializers.SplitterMetrics.Raw, Extend.SplitterMetrics> =
    core.serialization
        .object({
            type: core.serialization.stringLiteral("SPLITTER").optional(),
            precisionPerc: core.serialization.number().optional(),
            recallPerc: core.serialization.number().optional(),
            numExpectedDocs: core.serialization.number().optional(),
            numPredictedDocs: core.serialization.number().optional(),
            numCorrectDocs: core.serialization.number().optional(),
        })
        .extend(BaseMetrics);

export declare namespace SplitterMetrics {
    export interface Raw extends BaseMetrics.Raw {
        type?: "SPLITTER" | null;
        precisionPerc?: number | null;
        recallPerc?: number | null;
        numExpectedDocs?: number | null;
        numPredictedDocs?: number | null;
        numCorrectDocs?: number | null;
    }
}
