/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Extend from "../index";

export interface ProcessorRun {
    /** The test of the processor run. */
    test: string;
    /** The type of response. In this case, it will always be `"document_processor_run"`. */
    object: string;
    /**
     * The unique identifier for this processor run. The ID will start with "dpr_".
     *
     * Example: `"dpr_Xj8mK2pL9nR4vT7qY5wZ"`
     */
    id: string;
    /**
     * The ID of the processor used for this run. The ID will start with "dp_".
     *
     * Example: `"dp_Xj8mK2pL9nR4vT7qY5wZ"`
     */
    processorId: string;
    /** The ID of the specific processor version used. */
    processorVersionId: string;
    /**
     * The name of the processor.
     *
     * Example: `"Invoice Processor"`
     */
    processorName: string;
    /**
     * The current status of the processor run:
     * * `"PROCESSING"` - The processor is currently running
     * * `"PROCESSED"` - The processor has completed successfully
     * * `"FAILED"` - The processor encountered an error
     */
    status: Extend.ProcessorRunStatus;
    /** If the run failed, indicates the reason for failure. */
    failureReason?: string;
    /** If the run failed, provides a detailed message about the failure. */
    failureMessage?: string;
    /** Any metadata that was provided when creating the processor run. */
    metadata?: Record<string, unknown>;
    /** Indicates whether the run has been reviewed. */
    reviewed: boolean;
    /** Indicates whether the run results have been edited. */
    edited: boolean;
    edits: Record<string, Extend.ExtractionOutputEdits>;
    /**
     * The type of processor:
     * * `"CLASSIFY"` - Classifies documents into categories
     * * `"EXTRACT"` - Extracts structured data from documents
     * * `"SPLITTER"` - Splits documents into multiple parts
     */
    type: Extend.ProcessorRunType;
    /** The configuration used for this processor run. The type of configuration will match the processor type. */
    config: Extend.ProcessorRunConfig;
    /** The initial output from the processor run. The type of output will match the processor type. */
    initialOutput?: Extend.ProcessorOutput;
    /** The output after review, if any. */
    reviewedOutput?: Extend.ProcessorOutput;
    /**
     * The final output, either reviewed or initial.
     *
     * Conforms to the shape of output types and depends on the processor type and configuration shape.
     */
    output: Extend.ProcessorOutput;
    /**
     * Details of the processed files.
     *
     * If this was a file generated from a splitter processor, this will be the sub file.
     *
     * See the File object for more details.
     */
    files: Extend.File_[];
    /** An array of processors that were merged to create this output. Will be an empty array unless this output was the result of a MergeExtraction step in a workflow. */
    mergedProcessors: Extend.ProcessorRunMergedProcessorsItem[];
    /** The URL to view the processor run. */
    url: string;
}
