/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Extend from "../../../../index";

/**
 * @example
 *     {
 *         nextPageToken: "xK9mLPqRtN3vS8wF5hB2cQ==:zWvUxYjM4nKpL7aDgE9HbTcR2mAyX3/Q+CNkfBSw1dZ="
 *     }
 */
export interface GetWorkflowRunsRequest {
    /**
     * Filters workflow runs by their status. If not provided, no filter is applied.
     *
     *  The status of a workflow run:
     *  * `"PENDING"` - The workflow run has not started yet
     *  * `"PROCESSING"` - The workflow run is in progress
     *  * `"NEEDS_REVIEW"` - The workflow run requires manual review
     *  * `"REJECTED"` - The workflow run was rejected during manual review
     *  * `"PROCESSED"` - The workflow run completed successfully
     *  * `"FAILED"` - The workflow run encountered an error
     */
    status?: Extend.WorkflowStatus;
    /**
     * Filters workflow runs by the workflow ID. If not provided, runs for all workflows are returned. The ID will start with "workflow". This ID can be found when viewing a workflow on the Extend platform.
     *
     * Example: `"workflow_BMdfq_yWM3sT-ZzvCnA3f"`
     */
    workflowId?: string;
    /**
     * Filters workflow runs by the name of the file. Only returns workflow runs where the file name contains this string.
     *
     * Example: `"invoice"`
     */
    fileNameContains?: string;
    /**
     * Sorts the workflow runs by the given field.
     */
    sortBy?: Extend.SortByEnum;
    /**
     * Sorts the workflow runs in ascending or descending order. Ascending order means the earliest workflow run is returned first.
     */
    sortDir?: Extend.SortDirEnum;
    nextPageToken?: Extend.NextPageToken;
    maxPageSize?: Extend.MaxPageSize;
}
