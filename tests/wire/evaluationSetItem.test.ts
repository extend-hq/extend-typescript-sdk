/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { mockServerPool } from "../mock-server/MockServerPool";
import { ExtendClient } from "../../src/Client";

describe("EvaluationSetItem", () => {
    test("list", async () => {
        const server = mockServerPool.createServer();
        const client = new ExtendClient({ token: "test", environment: server.baseUrl });

        const rawResponseBody = {
            success: true,
            evaluationSetItems: [
                {
                    object: "evaluation_set_item",
                    id: "evi_kR9mNP12Qw4yTv8BdR3H",
                    evaluationSetId: "ev_2LcgeY_mp2T5yPaEuq5Lw",
                    fileId: "file_xK9mLPqRtN3vS8wF5hB2cQ",
                    expectedOutput: {
                        vendor_name: { id: "vendor_name", value: "Acme Corporation", type: "string", confidence: 1 },
                        invoice_number: { id: "invoice_number", value: "INV-2024-001", type: "string", confidence: 1 },
                        total_amount: {
                            id: "total_amount",
                            value: { amount: 1250, iso_4217_currency_code: "USD" },
                            type: "currency",
                            confidence: 1,
                        },
                        line_items: {
                            id: "line_items",
                            value: [
                                { description: "Office Supplies", quantity: 5, unit_price: 25, total: 125 },
                                { description: "Software License", quantity: 1, unit_price: 1125, total: 1125 },
                            ],
                            type: "array",
                            confidence: 1,
                        },
                    },
                },
                {
                    object: "evaluation_set_item",
                    id: "evi_7mXp9Rq3nW2vY1kT6fH4bZ",
                    evaluationSetId: "ev_2LcgeY_mp2T5yPaEuq5Lw",
                    fileId: "file_3nL8mKpR5qW9vT2fG7hY1",
                    expectedOutput: {
                        vendor_name: {
                            id: "vendor_name",
                            value: "Global Tech Solutions",
                            type: "string",
                            confidence: 1,
                        },
                        invoice_number: { id: "invoice_number", value: "GTS-2024-156", type: "string", confidence: 1 },
                        total_amount: {
                            id: "total_amount",
                            value: { amount: 875.5, iso_4217_currency_code: "USD" },
                            type: "currency",
                            confidence: 1,
                        },
                        line_items: {
                            id: "line_items",
                            value: [
                                { description: "Cloud Storage", quantity: 12, unit_price: 45, total: 540 },
                                { description: "API Usage", quantity: 1, unit_price: 335.5, total: 335.5 },
                            ],
                            type: "array",
                            confidence: 1,
                        },
                    },
                },
                {
                    object: "evaluation_set_item",
                    id: "evi_5kN7pQ9mR2wV8xT3fG1bY",
                    evaluationSetId: "ev_2LcgeY_mp2T5yPaEuq5Lw",
                    fileId: "file_9sL2mPrQ6tW4vX8kF5hG3",
                    expectedOutput: {
                        vendor_name: { id: "vendor_name", value: "Office Plus Ltd", type: "string", confidence: 1 },
                        invoice_number: { id: "invoice_number", value: "OP-2024-789", type: "string", confidence: 1 },
                        total_amount: {
                            id: "total_amount",
                            value: { amount: 342.75, iso_4217_currency_code: "USD" },
                            type: "currency",
                            confidence: 1,
                        },
                        line_items: {
                            id: "line_items",
                            value: [
                                { description: "Printer Paper", quantity: 10, unit_price: 12.5, total: 125 },
                                { description: "Ink Cartridges", quantity: 3, unit_price: 72.58, total: 217.75 },
                            ],
                            type: "array",
                            confidence: 1,
                        },
                    },
                },
            ],
            nextPageToken: "mK9pLPqRtN3vS8wF5hB2cQ==:yWvUxYjM4nKpL7aDgE9HbTcR2mAyX3/Q+CNkfBSw1dZ=",
        };
        server
            .mockEndpoint()
            .get("/evaluation_sets/evaluation_set_id_here/items")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.evaluationSetItem.list("evaluation_set_id_here", {
            nextPageToken: "xK9mLPqRtN3vS8wF5hB2cQ==:zWvUxYjM4nKpL7aDgE9HbTcR2mAyX3/Q+CNkfBSw1dZ=",
        });
        expect(response).toEqual({
            success: true,
            evaluationSetItems: [
                {
                    object: "evaluation_set_item",
                    id: "evi_kR9mNP12Qw4yTv8BdR3H",
                    evaluationSetId: "ev_2LcgeY_mp2T5yPaEuq5Lw",
                    fileId: "file_xK9mLPqRtN3vS8wF5hB2cQ",
                    expectedOutput: {
                        vendor_name: {
                            id: "vendor_name",
                            value: "Acme Corporation",
                            type: "string",
                            confidence: 1,
                        },
                        invoice_number: {
                            id: "invoice_number",
                            value: "INV-2024-001",
                            type: "string",
                            confidence: 1,
                        },
                        total_amount: {
                            id: "total_amount",
                            value: {
                                amount: 1250,
                                iso_4217_currency_code: "USD",
                            },
                            type: "currency",
                            confidence: 1,
                        },
                        line_items: {
                            id: "line_items",
                            value: [
                                {
                                    description: "Office Supplies",
                                    quantity: 5,
                                    unit_price: 25,
                                    total: 125,
                                },
                                {
                                    description: "Software License",
                                    quantity: 1,
                                    unit_price: 1125,
                                    total: 1125,
                                },
                            ],
                            type: "array",
                            confidence: 1,
                        },
                    },
                },
                {
                    object: "evaluation_set_item",
                    id: "evi_7mXp9Rq3nW2vY1kT6fH4bZ",
                    evaluationSetId: "ev_2LcgeY_mp2T5yPaEuq5Lw",
                    fileId: "file_3nL8mKpR5qW9vT2fG7hY1",
                    expectedOutput: {
                        vendor_name: {
                            id: "vendor_name",
                            value: "Global Tech Solutions",
                            type: "string",
                            confidence: 1,
                        },
                        invoice_number: {
                            id: "invoice_number",
                            value: "GTS-2024-156",
                            type: "string",
                            confidence: 1,
                        },
                        total_amount: {
                            id: "total_amount",
                            value: {
                                amount: 875.5,
                                iso_4217_currency_code: "USD",
                            },
                            type: "currency",
                            confidence: 1,
                        },
                        line_items: {
                            id: "line_items",
                            value: [
                                {
                                    description: "Cloud Storage",
                                    quantity: 12,
                                    unit_price: 45,
                                    total: 540,
                                },
                                {
                                    description: "API Usage",
                                    quantity: 1,
                                    unit_price: 335.5,
                                    total: 335.5,
                                },
                            ],
                            type: "array",
                            confidence: 1,
                        },
                    },
                },
                {
                    object: "evaluation_set_item",
                    id: "evi_5kN7pQ9mR2wV8xT3fG1bY",
                    evaluationSetId: "ev_2LcgeY_mp2T5yPaEuq5Lw",
                    fileId: "file_9sL2mPrQ6tW4vX8kF5hG3",
                    expectedOutput: {
                        vendor_name: {
                            id: "vendor_name",
                            value: "Office Plus Ltd",
                            type: "string",
                            confidence: 1,
                        },
                        invoice_number: {
                            id: "invoice_number",
                            value: "OP-2024-789",
                            type: "string",
                            confidence: 1,
                        },
                        total_amount: {
                            id: "total_amount",
                            value: {
                                amount: 342.75,
                                iso_4217_currency_code: "USD",
                            },
                            type: "currency",
                            confidence: 1,
                        },
                        line_items: {
                            id: "line_items",
                            value: [
                                {
                                    description: "Printer Paper",
                                    quantity: 10,
                                    unit_price: 12.5,
                                    total: 125,
                                },
                                {
                                    description: "Ink Cartridges",
                                    quantity: 3,
                                    unit_price: 72.58,
                                    total: 217.75,
                                },
                            ],
                            type: "array",
                            confidence: 1,
                        },
                    },
                },
            ],
            nextPageToken: "mK9pLPqRtN3vS8wF5hB2cQ==:yWvUxYjM4nKpL7aDgE9HbTcR2mAyX3/Q+CNkfBSw1dZ=",
        });
    });

    test("create", async () => {
        const server = mockServerPool.createServer();
        const client = new ExtendClient({ token: "test", environment: server.baseUrl });
        const rawRequestBody = {
            evaluationSetId: "evaluation_set_id_here",
            fileId: "file_id_here",
            expectedOutput: { value: { key: "value" } },
        };
        const rawResponseBody = {
            success: true,
            evaluationSetItem: {
                object: "evaluation_set_item",
                id: "evi_kR9mNP12Qw4yTv8BdR3H",
                evaluationSetId: "ev_2LcgeY_mp2T5yPaEuq5Lw",
                fileId: "file_xK9mLPqRtN3vS8wF5hB2cQ",
                expectedOutput: { value: { key: "value" } },
            },
        };
        server
            .mockEndpoint()
            .post("/evaluation_set_items")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.evaluationSetItem.create({
            evaluationSetId: "evaluation_set_id_here",
            fileId: "file_id_here",
            expectedOutput: {
                value: {
                    key: "value",
                },
            },
        });
        expect(response).toEqual({
            success: true,
            evaluationSetItem: {
                object: "evaluation_set_item",
                id: "evi_kR9mNP12Qw4yTv8BdR3H",
                evaluationSetId: "ev_2LcgeY_mp2T5yPaEuq5Lw",
                fileId: "file_xK9mLPqRtN3vS8wF5hB2cQ",
                expectedOutput: {
                    value: {
                        key: "value",
                    },
                },
            },
        });
    });

    test("update", async () => {
        const server = mockServerPool.createServer();
        const client = new ExtendClient({ token: "test", environment: server.baseUrl });
        const rawRequestBody = { expectedOutput: { value: { key: "value" } } };
        const rawResponseBody = {
            success: true,
            evaluationSetItem: {
                object: "evaluation_set_item",
                id: "evi_kR9mNP12Qw4yTv8BdR3H",
                evaluationSetId: "ev_2LcgeY_mp2T5yPaEuq5Lw",
                fileId: "file_xK9mLPqRtN3vS8wF5hB2cQ",
                expectedOutput: { value: { key: "value" } },
            },
        };
        server
            .mockEndpoint()
            .post("/evaluation_set_items/evaluation_set_item_id_here")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.evaluationSetItem.update("evaluation_set_item_id_here", {
            expectedOutput: {
                value: {
                    key: "value",
                },
            },
        });
        expect(response).toEqual({
            success: true,
            evaluationSetItem: {
                object: "evaluation_set_item",
                id: "evi_kR9mNP12Qw4yTv8BdR3H",
                evaluationSetId: "ev_2LcgeY_mp2T5yPaEuq5Lw",
                fileId: "file_xK9mLPqRtN3vS8wF5hB2cQ",
                expectedOutput: {
                    value: {
                        key: "value",
                    },
                },
            },
        });
    });

    test("createBatch", async () => {
        const server = mockServerPool.createServer();
        const client = new ExtendClient({ token: "test", environment: server.baseUrl });
        const rawRequestBody = {
            evaluationSetId: "evaluation_set_id_here",
            items: [{ fileId: "file_id_here", expectedOutput: { value: { key: "value" } } }],
        };
        const rawResponseBody = {
            success: true,
            evaluationSetItems: [
                {
                    object: "evaluation_set_item",
                    id: "evi_kR9mNP12Qw4yTv8BdR3H",
                    evaluationSetId: "ev_2LcgeY_mp2T5yPaEuq5Lw",
                    fileId: "file_xK9mLPqRtN3vS8wF5hB2cQ",
                    expectedOutput: { value: { key: "value" } },
                },
            ],
        };
        server
            .mockEndpoint()
            .post("/evaluation_set_items/bulk")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.evaluationSetItem.createBatch({
            evaluationSetId: "evaluation_set_id_here",
            items: [
                {
                    fileId: "file_id_here",
                    expectedOutput: {
                        value: {
                            key: "value",
                        },
                    },
                },
            ],
        });
        expect(response).toEqual({
            success: true,
            evaluationSetItems: [
                {
                    object: "evaluation_set_item",
                    id: "evi_kR9mNP12Qw4yTv8BdR3H",
                    evaluationSetId: "ev_2LcgeY_mp2T5yPaEuq5Lw",
                    fileId: "file_xK9mLPqRtN3vS8wF5hB2cQ",
                    expectedOutput: {
                        value: {
                            key: "value",
                        },
                    },
                },
            ],
        });
    });
});
