/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { mockServerPool } from "../mock-server/MockServerPool";
import { ExtendClient } from "../../src/Client";

describe("Workflow", () => {
    test("create", async () => {
        const server = mockServerPool.createServer();
        const client = new ExtendClient({ token: "test", environment: server.baseUrl });
        const rawRequestBody = { name: "Invoice Processing" };
        const rawResponseBody = {
            success: true,
            workflow: {
                object: "workflow",
                id: "workflow_BMlfq_yWM3sT-ZzvCnA3f",
                version: "draft",
                name: "Invoice Processing",
            },
        };
        server
            .mockEndpoint()
            .post("/workflows")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.workflow.create({
            name: "Invoice Processing",
        });
        expect(response).toEqual({
            success: true,
            workflow: {
                object: "workflow",
                id: "workflow_BMlfq_yWM3sT-ZzvCnA3f",
                version: "draft",
                name: "Invoice Processing",
            },
        });
    });
});
