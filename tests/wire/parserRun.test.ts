/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { mockServerPool } from "../mock-server/MockServerPool";
import { ExtendClient } from "../../src/Client";

describe("ParserRun", () => {
    test("get", async () => {
        const server = mockServerPool.createServer();
        const client = new ExtendClient({ token: "test", environment: server.baseUrl });

        const rawResponseBody = {
            success: true,
            warning: "warning",
            parserRun: {
                id: "parser_run_xK9mLPqRtN3vS8wF5hB2cQ",
                status: "PROCESSING",
                failureReason: "failureReason",
                object: "parser_run_status",
            },
        };
        server
            .mockEndpoint()
            .get("/parser_runs/parser_run_id_here")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.parserRun.get("parser_run_id_here");
        expect(response).toEqual({
            success: true,
            warning: "warning",
            parserRun: {
                object: "parser_run_status",
                id: "parser_run_xK9mLPqRtN3vS8wF5hB2cQ",
                status: "PROCESSING",
                failureReason: "failureReason",
            },
        });
    });

    test("delete", async () => {
        const server = mockServerPool.createServer();
        const client = new ExtendClient({ token: "test", environment: server.baseUrl });

        const rawResponseBody = {
            success: true,
            parserRunId: "parser_run_xK9mLPqRtN3vS8wF5hB2cQ",
            message: "Parser run data has been successfully deleted.",
        };
        server
            .mockEndpoint()
            .delete("/parser_runs/parser_run_id_here")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.parserRun.delete("parser_run_id_here");
        expect(response).toEqual({
            success: true,
            parserRunId: "parser_run_xK9mLPqRtN3vS8wF5hB2cQ",
            message: "Parser run data has been successfully deleted.",
        });
    });
});
